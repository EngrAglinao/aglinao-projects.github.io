* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.box1 {
  background: lightcoral;
}

.box2 {
  background: lightblue;
}

.box3 {
  background: lightgreen;
}

.css-grid {
  height: 100vh;
  display: grid;
  /* REPEATING VALUE */
  /* grid-template-columns: repeat(3, 300px); */

  /* Auto-fill or Auto-fit VALUE */
  /* fit on screen */
  /* grid-template-columns: repeat(auto-fill, 300px); */

  /* minimum -maximum value */
  /* grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); */

  /* ========================================= */
  /* values - % , px or fr */
  /* ex 1fr - takes up all the available Space */

  /* 1ST SITUATION */
  /* grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr 1fr; */
  /* 1ST SITUATION */

  /* ========================================= */

  /* 2ND SITUATION */
  /* grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr; */
  /* 2ND SITUATION */

  /* ========================================= */
  /* 3RD SITUATION */
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr 1fr;
  grid-template-areas:
    "box1 box2"
    "box3 box3";
  /* align HORIZONTALY
  justify-items: center;
  algin VERTICALLY
  align-items: center; */
  /* "." dot is for an empty space*/
  /* 3RD SITUATION */
}

/* 1ST SITUATION */
/* .box3 {
  -- long method
  grid-column-start: 1;
  grid-column-end: 3;
  -- short method
  grid-column: 1/3;
} */

/* Position of Box1 without this box2 will be displayed on the left side */
/* .box1 {
  grid-column: 1/2;
  grid-row: 1/2;
}

.box2 {
  grid-row: 1/3;
} */
/* 1ST SITUATION */

/* 2ND SITUATION */
/* .box1 {
  grid-column: 1/2;
  grid-row: 1/3;
}

.box2 {
  grid-row: 2/4;
}

.box3 {
  grid-column: 2/4;
} */
/* 2ND SITUATION */

/* 3RD SITUATION */
.box1 {
  grid-area: box1;
}

.box2 {
  grid-area: box2;
}

.box3 {
  grid-area: box3;
}
/* 3RD SITUATION */

/* ============================================= */
.flex-box {
  height: 100vh;
  border: 20px solid rgb(0, 0, 0);
  display: flex;
  /* flex-direction: row-reverse; - Reversing the position */
  /* flex-direction: column;      - Positioning it on column Style */
  /* flex-direction: row;         - Default- */

  /* justify-content: flex-start; - Default */
  /* justify-content: center;     - Positioned on Center  */
  /* justify-content: space-between; - adding space between each element */
  /* justify-content: space-around;  - adding space without equal spaces  */
  /* justify-content: space-evenly;  - adding space evenly/equally  */

  /* align-items: flex-start;     - Default */
  /* align-items: center;         - Centering the element vertically and horizontaly  */
  /* align-items: flex-end;       - aligns element on the bottom  */
  /* align-items: stretch;        - Stretch Element if the element dont have height value  */

  /* flex-wrap: wrap;             - Uses the default width and height value of the element  */
  /* align-content: flex-start;   - removes the gap when we use flex-wrap: wrap  */

  flex-wrap: wrap;
  align-content: center;
}

.child1 {
  width: 200px;
  height: 200px;
  background: rgb(39, 61, 134);
}

.child2 {
  width: 200px;
  height: 200px;
  background: rgb(172, 57, 53);
}

.child3 {
  width: 200px;
  height: 200px;
  background: rgb(149, 43, 140);
}

.child4 {
  width: 200px;
  height: 200px;
  background: green;
}
